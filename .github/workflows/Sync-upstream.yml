
name: Sync upstream

on:
#  push:
#    paths:
#      - '.github/workflows/Sync-upstream.yml'
#      - 'diy/**'
  schedule:
    - cron: 30 5 * * *
  watch:
    types: started
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    runs-on: Ubuntu-22.04

    name: 更新 ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [main]

    steps:
    - name: 检出
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: 初始化环境
      run : |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"
        
    - name: 克隆上级文件
      run: |
        cd $GITHUB_WORKSPACE
        git clone -b ${{matrix.target}} https://github.com/fichenx/Actions-OpenWrt.git ${{matrix.target}}
        cd ${{matrix.target}}
        #git rm -r --cache * >/dev/null 2>&1 &
        #rm -rf `find ./* -maxdepth 0 -type d ! -name "diy"` >/dev/null 2>&1
        rm -rf general PATCH sh/breakings_diy-part2.sh patches sh/pre_clone_action.sh sh/update.sh sh/build.sh
        git clone --depth 1 --filter=blob:none --no-checkout https://github.com/breakingbadboy/OpenWrt temp && cd temp && git checkout main -- general PATCH diy-part2.sh && cd .. && mv -n temp/general temp/PATCH ./ && mv -n temp/diy-part2.sh sh/breakings_diy-part2.sh ; rm -rf temp
        git clone --depth 1 --filter=blob:none --no-checkout https://github.com/ZqinKing/wrt_release temp && cd temp && git checkout main -- patches pre_clone_action.sh update.sh build.sh && mv -n pre_clone_action.sh update.sh build.sh ../sh/  && cd .. && mv -n temp/patches ./ ; rm -rf temp

    - name: 处理克隆的文件
      run: |
        cd sh
        #处理build.sh 
        sed -i -e 's|BASE_PATH=$(cd $(dirname $0) \&\& pwd)|BASE_PATH=$(cd $(dirname $0)/../ \&\& pwd)|' \
               -e 's|CONFIG_FILE="$BASE_PATH/deconfig/$Dev.config"|CONFIG_FILE="$BASE_PATH/config/$Dev.config"|' \
               -e 's|cat "$BASE_PATH/deconfig/nss.config"|cat "$BASE_PATH/config/nss.config"|' \
               -e 's|cat "$BASE_PATH/deconfig/proxy.config"|#cat "$BASE_PATH/deconfig/proxy.config"|' \
               -e 's|$BASE_PATH/update.sh|$BASE_PATH/sh/update.sh|' \
               -e 's|*rootfs.tar.gz|*.tar.gz|' \
               build.sh
        sed -i '/make -j$(($(nproc) + 1)) || make -j1 V=s/a \\ncd $BASE_PATH/$BUILD_DIR/bin/packages\ntar -zcvf Packages.tar.gz ./*\ncp Packages.tar.gz $BASE_PATH/$BUILD_DIR/bin/targets/\ncd "$BASE_PATH/$BUILD_DIR"' build.sh

        #处理pre_clone_action.sh
        sed -i -e 's|BASE_PATH=$(cd $(dirname $0) \&\& pwd)|BASE_PATH=$(cd $(dirname $0)/../ \&\& pwd)|' \
               -e 's|CONFIG_FILE="$BASE_PATH/deconfig/$Dev.config"|CONFIG_FILE="$BASE_PATH/config/$Dev.config"|' \
               pre_clone_action.sh

        #处理update.sh
        sed -i -e 's|BASE_PATH=$(cd $(dirname $0) \&\& pwd)|BASE_PATH=$(cd $(dirname $0)/../ \&\& pwd)|' \
               -e 's|192.168.1.1|192.168.123.1|' \
               -e 's|kenzok8/small-package|fichenx/openwrt-package\;js|' \
               -e 's|small-package|fichenx/openwrt-package|' \
               -e 's|small8|fichenx|' \
               -e 's|build by ZqinKing|build by FICHEN(\$(TZ=UTC-8 date +%Y.%m.%d))|' \
               -e 's|^\(    \./scripts/feeds install -p fichenx -f \)|\1luci-app-argon-config luci-theme-design luci-app-design-config luci-app-watchcat-plus luci-app-wol \\\n        |' \
               update.sh


    - name: 上传更新文件
      env: 
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        [ -e $GITHUB_WORKSPACE/LICENSE ] && cp $GITHUB_WORKSPACE/LICENSE $GITHUB_WORKSPACE/${{matrix.target}}
        [ -e $GITHUB_WORKSPACE/README.md ] && cp $GITHUB_WORKSPACE/README.md $GITHUB_WORKSPACE/${{matrix.target}}
        cd $GITHUB_WORKSPACE/${{matrix.target}}
        git add .
        git commit -am "update $(date +%Y-%m-%d" "%H:%M:%S)"
        git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/fichenx/Actions-OpenWrt.git" HEAD:${{matrix.target}}
               
    - name: 删除工作流
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
